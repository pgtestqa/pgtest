# name: CI
# on:
#   push:
#     branches: ['develop']
#   pull_request:
#     branches: ['develop']
#   workflow_dispatch:
# jobs:
#   build:
#     # The type of runner that the job will run on
#     runs-on: ubuntu-latest

#     # Steps represent a sequence of tasks that will be executed as part of the job
#     steps:
#       # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#       - uses: actions/checkout@v3

#       - name: OWASP ZAP Baseline Scan
#         # You may pin to the exact commit or the version.
#         # uses: zaproxy/action-baseline@7cea08522cd386f6c675776d5e4296aecf61f33b
#         uses: zaproxy/action-baseline@v0.7.0
#         with:
#           # Target URL
#           target: 'https://bff.paymentgateway.ip-poc.com/bff/v1/gmo-charge'

name: CI
on:
  push:
    branches: ['develop']
  pull_request:
    branches: ['develop']
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: OWASP ZAP Baseline Scan
        uses: zaproxy/action-baseline@v0.7.0
        with:
          target: 'https://bff.paymentgateway.ip-poc.com/bff/v1/gmo-charge'

      - name: Save Scan Report
        run: |
          # Rename the report file to something unique
          mv zap-baseline-report.html myreport-$(date +"%Y%m%d%H%M%S").html

      - name: Check for Issues in Scan Report
        run: |
          # Assuming you have a script to check the report for issues (e.g., using a tool like grep)
          if grep -q 'Vulnerability Found' myreport*.html; then
            echo "Security issues found in the scan report."
            exit 1  # Exit with an error code to stop the workflow
          else
            echo "No security issues found in the scan report."
          fi

      - name: Publish Scan Report
        if: failure() == false
        uses: actions/upload-artifact@v2
        with:
          name: zap-scan-report
          path: myreport*.html
